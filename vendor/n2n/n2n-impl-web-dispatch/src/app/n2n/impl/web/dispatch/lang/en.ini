; Exception Handling

dev_errorpage_title = "{exception} occurred" 
dev_errorpage_info_title = "Info"
dev_errorpage_error_no_message = "[No exception message]"
dev_errorpage_error_file_path_label = "File:"
dev_errorpage_error_file_line_label = "Line:"
dev_errorpage_error_code_title = "Code"
dev_errorpage_statement_title = "Statement"
dev_errorpage_statement_bound_values = "Bound Values"
dev_errorpage_stack_trace = "Stack Trace"
dev_errorpage_current_output = "Current Output"

; MAPPER

n2n.dispatch.property.impl.DateTimeProperty.parseDateTime = "{field} is invalid. Please enter the value using following pattern: {example}"
n2n.dispatch.property.impl.FileProperty.maxSize = "Uploaded file for {field} is to large. Max size is {maxSize}, given: {file_name} ({size})"

; VALIDATORS

n2n.dispatch.val.ValNotEmpty = "{field} is mandatory."
n2n.dispatch.val.ValIsset = "{field} is mandatory."
n2n.dispatch.val.ValEnum = "{field} contains an invalid option."

n2n.dispatch.val.ValNumeric.numeric = "{field} must be numeric."
n2n.dispatch.val.ValNumeric.min = "{field} too small."
n2n.dispatch.val.ValNumeric.max = "{field} too large."

n2n.dispatch.val.ValImageResourceMemory = "The width and height of {field} is too large."

n2n.dispatch.val.ValUrl.invalid = "{field} is invalid."
n2n.dispatch.val.ValUrl.invalidScheme = "{field} must have one of following schemes: {allowed_schemes}"
n2n.dispatch.val.ValEmail = "{field} is invalid."

n2n.dispatch.val.ValArraySize.min = "The minimum of {field} is {min}"
n2n.dispatch.val.ValArraySize.max = "The maximum of {field} is {max}" 

n2n.dispatch.val.ValImageFile.notSupported = "{field}: Image type not supported."
n2n.dispatch.val.ValImageFile.corrupted = "{field}: Image file corrupted."

n2n.dispatch.val.ValEnum = "{field} contains invalid value."

n2n.dispatch.val.ValArrayKeys = "Invalid fields of {field}."
n2n.dispatch.val.ValMandatoryArrayKeys = "Field {key} of {field} mandatory." 

n2n.model.dispatch.val.ClosureValidator.singular = "{field} is invalid."
n2n.model.dispatch.val.ClosureValidator.plural = "{field} are invalid."

n2n.dispatch.val.ValDateTime.min = "{field} must be after {date}."
n2n.dispatch.val.ValDateTime.max = "{field} must be before {date}." 

n2n.dispatch.property.impl.DateTimeProperty.parseDateTime = "{field} is invalid. Use following pattern: {example}"

n2n.dispatch.val.ValMaxLength = "{field} is too long ({current_length} characters). Maximum allowed characters are {max_length}."
n2n.dispatch.val.ValMinLength = "{field} is too short ({current_length} characters). Minimum characters required are {min_length}."

n2n.dispatch.val.ValFileExtensions  = "Invalid Extension for {field}, allowed extensions: {allowed_extensions}"
; UI

n2n.dispatch.ui.InputFileLabel.delete_link_label = "delete"
aria_required_label = "required"

n2n_impl_mag_collection_add = "Add new {itemName}"